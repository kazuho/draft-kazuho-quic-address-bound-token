



QUIC                                                              K. Oku
Internet-Draft                                                    Fastly
Intended status: Standards Track                          March 23, 2019
Expires: September 24, 2019


                 Shared Congestion Controller for QUIC
                   draft-kazuho-quic-shared-cc-latest

Abstract

   This document explains a method of sharing address validation and
   congestion control logic when multiple connections are established
   between two endpoints.

Status of This Memo

   This Internet-Draft is submitted in full conformance with the
   provisions of BCP 78 and BCP 79.

   Internet-Drafts are working documents of the Internet Engineering
   Task Force (IETF).  Note that other groups may also distribute
   working documents as Internet-Drafts.  The list of current Internet-
   Drafts is at http://datatracker.ietf.org/drafts/current/.

   Internet-Drafts are draft documents valid for a maximum of six months
   and may be updated, replaced, or obsoleted by other documents at any
   time.  It is inappropriate to use Internet-Drafts as reference
   material or to cite them other than as "work in progress."

   This Internet-Draft will expire on September 24, 2019.

Copyright Notice

   Copyright (c) 2019 IETF Trust and the persons identified as the
   document authors.  All rights reserved.

   This document is subject to BCP 78 and the IETF Trust's Legal
   Provisions Relating to IETF Documents
   (http://trustee.ietf.org/license-info) in effect on the date of
   publication of this document.  Please review these documents
   carefully, as they describe your rights and restrictions with respect
   to this document.  Code Components extracted from this document must
   include Simplified BSD License text as described in Section 4.e of
   the Trust Legal Provisions and are provided without warranty as
   described in the Simplified BSD License.





Oku                    Expires September 24, 2019               [Page 1]

Internet-Draft    Shared Congestion Controller for QUIC       March 2019


Table of Contents

   1.  Introduction  . . . . . . . . . . . . . . . . . . . . . . . .   2
     1.1.  Notational Conventions  . . . . . . . . . . . . . . . . .   2
   2.  The unbound_token Transport Parameter . . . . . . . . . . . .   2
   3.  Sharing the Congestion Controller . . . . . . . . . . . . . .   3
     3.1.  Prioritization  . . . . . . . . . . . . . . . . . . . . .   3
   4.  Security Considerations . . . . . . . . . . . . . . . . . . .   3
     4.1.  Reflection Attack . . . . . . . . . . . . . . . . . . . .   3
     4.2.  Plaintext Tokens  . . . . . . . . . . . . . . . . . . . .   4
   5.  IANA Considerations . . . . . . . . . . . . . . . . . . . . .   4
   6.  References  . . . . . . . . . . . . . . . . . . . . . . . . .   4
     6.1.  Normative References  . . . . . . . . . . . . . . . . . .   4
     6.2.  Informative References  . . . . . . . . . . . . . . . . .   4
   Appendix A.  Acknowledgements . . . . . . . . . . . . . . . . . .   4
   Author's Address  . . . . . . . . . . . . . . . . . . . . . . . .   5

1.  Introduction

   One of the goals of QUIC [QUIC-TRANSPORT] is to reduce the connection
   establishment latency.  It has reduced the latency to one round-trip
   time for the most common case, or to zero when 0-RTT resumption is
   being used.  However, the endpoints are still restricted to slow
   start when the connection is established.  Also, the server is not
   allowed to send more than three times of data until it validates the
   address of the peer.  Note that TLS [RFC8446] requires connection for
   each server name to be established independently even if the servers
   resolve to the same address.

   This document defines a QUIC Transport Parameter that changes the
   scope of the token sent using a NEW_TOKEN frame from the server
   identity to the server's address, so that the server can use the
   information carried in the token to consolidate the congestion
   control state among the connections going to the same client.

1.1.  Notational Conventions

   The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT",
   "SHOULD", "SHOULD NOT", "RECOMMENDED", "MAY", and "OPTIONAL" in this
   document are to be interpreted as described in [RFC2119].

2.  The unbound_token Transport Parameter

   The unbound_token Transport Parameter (0xTBD) indicates the client
   that the tokens provided by NEW_TOKEN frames can be used for future
   connections that go to the same server address tuple rather than that
   to the same server name.




Oku                    Expires September 24, 2019               [Page 2]

Internet-Draft    Shared Congestion Controller for QUIC       March 2019


   The transport parameter does not carry a value; the length of the
   value field MUST be set to zero.

   Only the server sends the Transport Parameter.  A server can include
   the identifier of the congestion controller in the token so that it
   can consolidate newly established connections using that token to the
   existing congestion controller.

   Clients SHOULD retain provided tokens with the original server
   address tuple of the connections being the keys rather than those
   advertised as servers' preferred addresses, so that the associated
   unbound token can be found for subsequent connections even if the
   preceding connections migrate to a different address.

3.  Sharing the Congestion Controller

   When a consolidated congestion controller is being used, an endpoint
   can distribute the congestion window between the connections in any
   way.  However, acknowledgements MUST be sent out at the same moments
   as when the congestion controller is not consolidated.  The loss
   recovery logic SHOULD operate independently for each connection, but
   forward receipts of acknowledgements and loss signals to the
   consolidated congestion controller.

   Unbound token also provides increased chance of skipping address
   validation during connection establishment, when multitudes of server
   names are hosted by a single server.

3.1.  Prioritization

   TODO: define a frame that carries the "priority" of the connection.
   The range of the priority would be between 1 and 256.  The frame
   encourages the receiver to assign bandwidth proportional to the
   suggested priority value for each connection.

4.  Security Considerations

4.1.  Reflection Attack

   An attacker can create a connection to obtain an unbound token, then
   initiate a new connection by using the token with a spoofed client
   address, thereby skipping address validation.  The impact of the
   attack is equivalent to spoofed NAT rebinding.  A server SHOULD NOT
   skip path validation if the source IP address of an initiating
   connection is different from the address for which the unbound token
   was issued.





Oku                    Expires September 24, 2019               [Page 3]

Internet-Draft    Shared Congestion Controller for QUIC       March 2019


   A server associates an Initial packet to an existing connection using
   the Destination Connection ID, QUIC version, and the five tuple.  If
   all of the values match to that of an existing connection, the packet
   is processed accordingly.  Otherwise, a server MUST handle the packet
   as potentially creating a new connection.

4.2.  Plaintext Tokens

   A server MUST NOT issue an unbound token that includes the name of
   the original server or the identifier of the congestion controller in
   cleartext, because if visible on the wire, observers can use that
   information to correlate the ongoing connection establishment and the
   properties of the connection that previously existed.

5.  IANA Considerations

   TBD

6.  References

6.1.  Normative References

   [QUIC-TRANSPORT]
              Iyengar, J., Ed. and M. Thomson, Ed., "QUIC: A UDP-Based
              Multiplexed and Secure Transport", draft-ietf-quic-
              transport-16 (work in progress), October 2018.

   [RFC2119]  Bradner, S., "Key words for use in RFCs to Indicate
              Requirement Levels", BCP 14, RFC 2119,
              DOI 10.17487/RFC2119, March 1997, <https://www.rfc-
              editor.org/info/rfc2119>.

6.2.  Informative References

   [RFC8446]  Rescorla, E., "The Transport Layer Security (TLS) Protocol
              Version 1.3", RFC 8446, DOI 10.17487/RFC8446, August 2018,
              <https://www.rfc-editor.org/info/rfc8446>.

Appendix A.  Acknowledgements

   A similar proposal can be found at https://svs.informatik.uni-
   hamburg.de/publications/2019/2019-03-22-Sy-preprint-Surfing-the-Web-
   quicker-than-QUIC-via-a-shared-Address-Validation.pdf that proposes a
   transport parameter for changes the scope of token to a list of
   server names, and uses token to skip address validation.  This
   proposal is different from that in two aspects: the scope of the
   token is the server's address, and it is used for consolidating the
   congestion controller as well.



Oku                    Expires September 24, 2019               [Page 4]

Internet-Draft    Shared Congestion Controller for QUIC       March 2019


Author's Address

   Kazuho Oku
   Fastly

   Email: kazuhooku@gmail.com













































Oku                    Expires September 24, 2019               [Page 5]
